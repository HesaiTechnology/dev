"use strict";(self.webpackChunkdocusaurus_wiki=self.webpackChunkdocusaurus_wiki||[]).push([[3610],{1676:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"how_to_guides/HTTP_api","title":"Use HTTP API","description":"Overview","source":"@site/docs/how_to_guides/HTTP_api.md","sourceDirName":"how_to_guides","slug":"/how_to_guides/HTTP_api","permalink":"/dev/docs/how_to_guides/HTTP_api","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"howToSidebar","previous":{"title":"Configure Ethernet","permalink":"/dev/docs/how_to_guides/network_config"},"next":{"title":"Use TCP API","permalink":"/dev/docs/how_to_guides/TCP_api"}}');var t=n(4848),s=n(8453),i=n(9030);const o={sidebar_position:2},d="Use HTTP API",l={},c=[{value:"Overview",id:"overview",level:2},{value:"Application Method",id:"application-method",level:2},{value:"Examples",id:"examples",level:2},{value:"Retrieve Lidar Parameters (GET)",id:"retrieve-lidar-parameters-get",level:3},{value:"Configure Lidar Parameters (SET)",id:"configure-lidar-parameters-set",level:3}];function h(e){const r={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsx)(r.h1,{id:"use-http-api",children:"Use HTTP API"})}),"\n",(0,t.jsx)(r.h2,{id:"overview",className:"numbered-heading","data-number":"1","data-text":"Overview","data-toc-number":"1",children:"1 Overview"}),"\n",(0,t.jsx)(r.p,{children:"Hesai HTTP API provides a standard HTTP interface that allows developers to interact with lidar devices using simple HTTP commands. With this API, you can easily perform operations such as retrieving lidar parameters and configuring features."}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.strong,{children:"Note: HTTP API is only applicable to Hesai lidar models that support HTTP servers, including the Pandar series, QT series and XT series."})}),"\n",(0,t.jsx)(r.h2,{id:"application-method",className:"numbered-heading","data-number":"2","data-text":"Application Method","data-toc-number":"2",children:"2 Application Method"}),"\n",(0,t.jsx)(r.p,{children:"The application method of HTTP API commands is introduced as follows:"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["Connect the lidar to the host computer and ensure proper communication is established (refer to ",(0,t.jsx)(r.a,{href:"/dev/docs/how_to_guides/network_config#configuration-method",children:"Configure Ethernet"})," for details);"]}),"\n",(0,t.jsx)(r.li,{children:"Send HTTP API commands from the host computer to the lidar. It is recommended to use Python scripts for this purpose. A sample code is provided below:"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"#!/usr/bin/env python3\n\n# -*- coding: utf-8 -*-\n\nfrom urllib import request, parse\nimport requests\nimport json\nimport sys\nimport getopt\nimport IPy\nimport time\nimport os\n\n## Lidar IP address\n\nipaddr = \"192.168.1.201\"\n\n## HTTP API command\n\nlocal_url = 'http://' + ipaddr + '/pandar.cgi?action=get&object=lidar_config'\nf = None  # Initialize f\ntry:\n    f = request.urlopen(local_url, timeout=3.0)\n    print(\"Success!\")\n    data = f.read()\n    print(data)\n    print('Status:', f.status, f.reason)\n    json_data = data.decode('utf-8')\n    py_dict = json.loads(json_data)\n    py_body = py_dict.get('Body')\n\nexcept Exception as e:\n    print(f\"Error connecting to {local_url}: {e}\")\nfinally:\n    if f:\n        f.close()\n\n"})}),"\n",(0,t.jsx)(r.p,{children:"In the above sample code, there are two parameters that require special attention:"}),"\n",(0,t.jsxs)(r.ul,{children:["\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.em,{children:"ipaddr"}),": The IP address of the lidar"]}),"\n",(0,t.jsxs)(r.li,{children:[(0,t.jsx)(r.em,{children:"local_url"}),": The string corresponding to the HTTP API command"]}),"\n"]}),"\n",(0,t.jsx)(r.p,{children:"During actual operation, these two parameters need to be updated based on the lidar's IP configuration and the purpose of the HTTP API."}),"\n",(0,t.jsxs)(r.ol,{start:"3",children:["\n",(0,t.jsx)(r.li,{children:"Retrieve the response from the lidar to confirm whether the API command was successfully sent."}),"\n"]}),"\n",(0,t.jsx)(r.h2,{id:"examples",className:"numbered-heading","data-number":"3","data-text":"Examples","data-toc-number":"3",children:"3 Examples"}),"\n",(0,t.jsx)(r.p,{children:"This document provides some common use cases as examples to illustrate the usage of the HTTP API."}),"\n",(0,t.jsx)(r.p,{children:(0,t.jsx)(r.em,{children:"Note: The following examples are based on the model of XT32M2X. The HTTP API commands for different lidar models may vary. Please refer to the HTTP API manual of the specific model."})}),"\n",(0,t.jsx)(r.h3,{id:"retrieve-lidar-parameters-get",className:"numbered-heading","data-number":"3.1","data-text":"Retrieve Lidar Parameters (GET)","data-toc-number":"3.1",children:"3.1 Retrieve Lidar Parameters (GET)"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["Set the ",(0,t.jsx)(r.em,{children:"ipaddr"})," parameter in the sample code according to the current IP address of the lidar;"]}),"\n",(0,t.jsxs)(r.li,{children:["Modify the ",(0,t.jsx)(r.em,{children:"local_url"})," in the sample code as follows (this example retrieves basic information about the lidar), and run the Python script on the host computer:"]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"\n## HTTP API command\n\nlocal_url = 'http://' + ipaddr + '/pandar.cgi?action=get&object=device_info'\n"})}),"\n",(0,t.jsxs)(r.ol,{start:"3",children:["\n",(0,t.jsx)(r.li,{children:"The output will include basic information about the lidar, e.g. SN, MAC address, firmware version, etc. Here is the output example:"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'Success!\nb\'{"Head":{"ErrorCode":"0","Message": "Success"},"Body":{"SN": "XT3ACD5F983ACC56","Mac": "EC:9F:00:01:58:3D", "SW Ver: "2.1.7","HW Ver":"1.0.0","FW Ver":"2.0.11","Model":"XT32M2X","Angleoffset":"9129", "Calibsize":"0","FPGA_Ver":"","LidarCalibsize":"384","Up_Fpga_Ver":" 2.1.4","Udp_Seq":"1","1","ProdDate":"2023-06-08", "ProdName":"XT32M2X-B01","LidarDataformat":"1","Trigger_Method":"0","LaserNum":"32","Firing_Method":"",""AccAnglePhase":"0","AccAn\nglePeak": "0","AccAngleEnable":"0","0","MotorType":"0", "LargeCodeRange":"1","Codewheel_cal":"1","MotorStartAngle_en":"0", "MotorstartAngle_val":"0","UpFpgaconfigsha":"f80c28c5", "UpFpgacorrectsha":"ef480d97","PN":""XT32M2X"}}\'\nStatus:200 OK\n'})}),"\n",(0,t.jsx)(r.h3,{id:"configure-lidar-parameters-set",className:"numbered-heading","data-number":"3.2","data-text":"Configure Lidar Parameters (SET)","data-toc-number":"3.2",children:"3.2 Configure Lidar Parameters (SET)"}),"\n",(0,t.jsxs)(r.ol,{children:["\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["Set the ",(0,t.jsx)(r.em,{children:"ipaddr"})," parameter in the sample code according to the current IP address of the lidar;"]}),"\n"]}),"\n",(0,t.jsxs)(r.li,{children:["\n",(0,t.jsxs)(r.p,{children:["Modify the ",(0,t.jsx)(r.em,{children:"local_url"})," in the sample code as follows (this example configures the lidar to ",(0,t.jsx)(r.strong,{children:"dual return"})," mode), and run the Python script on the host computer:"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-python",children:"\n## HTTP API command\n\nlocal_url = 'http://' + ipaddr + '/pandar.cgi?action=set&object=lidar_data&key=lidar_mode&value=2'\n"})}),"\n",(0,t.jsxs)(r.ol,{start:"3",children:["\n",(0,t.jsx)(r.li,{children:"If the following output is displayed in the terminal, the configuration was successful:"}),"\n"]}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{className:"language-bash",children:'Success!\nb\'{"Head":{"ErrorCode":"0","Message": "Success"}}\'\nStatus:200 OK\n'})}),"\n",(0,t.jsxs)(r.ol,{start:"4",children:["\n",(0,t.jsx)(r.li,{children:"Open a web browser, enter the lidar's IP address and confirm that the return mode configuration is already effective on the lidar's control page:"}),"\n"]}),"\n",(0,t.jsx)("img",{src:(0,i.Ay)("/img/http_dualreturn.png"),alt:"http_dualreturn",style:{display:"block",margin:"0 auto",width:"auto"}})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}}}]);