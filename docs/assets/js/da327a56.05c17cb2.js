"use strict";(self.webpackChunkdocusaurus_wiki=self.webpackChunkdocusaurus_wiki||[]).push([[5748],{2507:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>d,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"how_to_guides/TCP_api","title":"Use TCP API","description":"Overview","source":"@site/docs/how_to_guides/TCP_api.md","sourceDirName":"how_to_guides","slug":"/how_to_guides/TCP_api","permalink":"/dev/docs/how_to_guides/TCP_api","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"howToSidebar","previous":{"title":"Use HTTP API","permalink":"/dev/docs/how_to_guides/HTTP_api"},"next":{"title":"Synchronize Time using PTP","permalink":"/dev/docs/how_to_guides/ptp_sync_application"}}');var o=t(4848),i=t(8453),a=t(9030);const d={sidebar_position:3},r="Use TCP API",c={},h=[{value:"Overview",id:"overview",level:2},{value:"Application Method",id:"application-method",level:2},{value:"Examples",id:"examples",level:2},{value:"Sending TCP API Commands through LidarUtilities",id:"sending-tcp-api-commands-through-lidarutilities",level:3},{value:"Sending TCP API Commands through Python Scripts",id:"sending-tcp-api-commands-through-python-scripts",level:3},{value:"Sending TCP API Commands through External Tools (Packet Sender)",id:"sending-tcp-api-commands-through-external-tools-packet-sender",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"use-tcp-api",children:"Use TCP API"})}),"\n",(0,o.jsx)(n.h2,{id:"overview",className:"numbered-heading","data-number":"1","data-text":"Overview","data-toc-number":"1",children:"1 Overview"}),"\n",(0,o.jsx)(n.p,{children:"TCP (Transmission Control Protocol) is a commonly used network transport protocol primarily designed to ensure the reliability and order of network communication. TCP API commands are data instructions (messages or commands) exchanged between the client and server during TCP-based communication for purposes such as control, operation, and querying. This document focuses on the communication between Hesai lidar and a host computer."}),"\n",(0,o.jsx)(n.h2,{id:"application-method",className:"numbered-heading","data-number":"2","data-text":"Application Method","data-toc-number":"2",children:"2 Application Method"}),"\n",(0,o.jsx)(n.p,{children:"The usage of TCP API commands is as follows:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:["Connect the lidar to the host computer and ensure proper communication is established (refer to ",(0,o.jsx)(n.a,{href:"/dev/docs/how_to_guides/network_config#configuration-method",children:"Configure Ethernet"})," for details);"]}),"\n",(0,o.jsx)(n.li,{children:"Send TCP API commands from the host computer to the lidar, receive the response from the lidar, and parse the response based on the TCP API manual to confirm whether the command was successfully executed."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"This document introduces three different methods for sending TCP API commands along with corresponding examples. User can choose one or more methods based on the actual needs."}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Note: The following examples are based on the TCP API command of changing the operation mode (0x1C) on OT128. The TCP API commands for different lidar models may vary. Please refer to the TCP API manual of the specific model."})}),"\n",(0,o.jsx)(n.h2,{id:"examples",className:"numbered-heading","data-number":"3","data-text":"Examples","data-toc-number":"3",children:"3 Examples"}),"\n",(0,o.jsx)(n.h3,{id:"sending-tcp-api-commands-through-lidarutilities",className:"numbered-heading","data-number":"3.1","data-text":"Sending TCP API Commands through LidarUtilities","data-toc-number":"3.1",children:"3.1 Sending TCP API Commands through LidarUtilities"}),"\n",(0,o.jsxs)(n.p,{children:["Download and install LidarUtilities from Hesai's ",(0,o.jsx)(n.a,{href:"https://www.hesaitech.com/cn/downloads#ot128",children:"official website"}),'. Open the software and switch to the "Send PTC Command" interface. Enter the corresponding command code and payload in the "Send Command" field. The response is shown as follows:']}),"\n",(0,o.jsx)("img",{src:(0,a.Ay)("/img/LU_command.png"),alt:"LU_command",style:{display:"block",margin:"0 auto",width:"80%"}}),"\n",(0,o.jsxs)(n.p,{children:["Here, ",(0,o.jsx)(n.code,{children:"47 74"})," is the identifier, ",(0,o.jsx)(n.code,{children:"1C"})," represents the command just sent, the fourth byte ",(0,o.jsx)(n.code,{children:"00"}),' is the return code indicating "No error," and the fifth to eighth bytes ',(0,o.jsx)(n.code,{children:"00"})," indicate no payload information."]}),"\n",(0,o.jsx)(n.p,{children:(0,o.jsx)(n.em,{children:"Note: LidarUtilities only supports some Hesai lidar models (OT128, AT128P, etc.)."})}),"\n",(0,o.jsx)(n.h3,{id:"sending-tcp-api-commands-through-python-scripts",className:"numbered-heading","data-number":"3.2","data-text":"Sending TCP API Commands through Python Scripts","data-toc-number":"3.2",children:"3.2 Sending TCP API Commands through Python Scripts"}),"\n",(0,o.jsxs)(n.p,{children:["If the current lidar model does not support LidarUtilities, users can use the ",(0,o.jsx)(n.a,{href:"https://github.com/HesaiTechnology/Cyber_Security/blob/master/ptc_cgi_sample/ptc/py/ptc.py",children:"Python script"})," provided by Hesai. Configure the following settings based on the actual requirement:"]}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:(0,o.jsx)(n.a,{href:"https://github.com/HesaiTechnology/Cyber_Security/blob/83c371df9d6d3c639ca5a9b357de36738021e92e/ptc_cgi_sample/ptc/py/ptc.py#L5",children:"IP/Port"})}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.a,{href:"https://github.com/HesaiTechnology/Cyber_Security/blob/83c371df9d6d3c639ca5a9b357de36738021e92e/ptc_cgi_sample/ptc/py/ptc.py#L77",children:"Command"}),", specifying the command and payload to send out"]}),"\n",(0,o.jsx)(n.li,{children:"Python environment on host computer"}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"After completing the configuration, run the script to send the specified TCP API command to the lidar and receive the corresponding response. The output is as follows:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-bash",children:"payload :\n01\nresponse:\nb'Gt\\x1c\\x00\\x00\\x00\\x00\\x00'\ncommand is: 1c, get return code: 00, return length: 0,\nreturn string:\n{'response_command': '1c', 'response_return_code': '00', 'response_payload_length':0,'response_payload': b''}\n"})}),"\n",(0,o.jsxs)(n.p,{children:["Here, the ",(0,o.jsx)(n.code,{children:"return code"})," ",(0,o.jsx)(n.code,{children:"00"}),' indicates that the command was successfully executed with "No error". Additionally, users can also use Wireshark to analyze the TCP packets sent by the lidar to obtain the results. As shown in the image below, the returned data field contains ',(0,o.jsx)(n.code,{children:"47 74"})," is the data identifier, ",(0,o.jsx)(n.code,{children:"1C"})," is the command just sent, the fourth byte ",(0,o.jsx)(n.code,{children:"00"}),' is the return code indicating "No error", and the fifth to eighth bytes ',(0,o.jsx)(n.code,{children:"00"})," indicating no payload information."]}),"\n",(0,o.jsx)("img",{src:(0,a.Ay)("/img/TCP_response.jpg"),alt:"TCP_response",style:{display:"block",margin:"0 auto",width:"80%"}}),"\n",(0,o.jsx)(n.h3,{id:"sending-tcp-api-commands-through-external-tools-packet-sender",className:"numbered-heading","data-number":"3.3","data-text":"Sending TCP API Commands through External Tools (Packet Sender)","data-toc-number":"3.3",children:"3.3 Sending TCP API Commands through External Tools (Packet Sender)"}),"\n",(0,o.jsxs)(n.p,{children:["Download and install ",(0,o.jsx)(n.a,{href:"https://packetsender.com/download",children:"Packet Sender"}),", a free and open-source tool. Its using method is similar to LidarUtilities."]}),"\n",(0,o.jsx)(n.p,{children:'As shown in the image below, enter the raw command (Hex format) in the HEX field, configure the corresponding lidar IP address and TCP port, select the "TCP" mode, and click "Send". Then users can check the sent command and received response in the Log window below (the response needs to be parsed based on the instructions from TCP API manual).'}),"\n",(0,o.jsx)("img",{src:(0,a.Ay)("/img/TCP_sender.png"),alt:"TCP_sender",style:{display:"block",margin:"0 auto",width:"80%"}})]})}function m(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);